[{"path":"https://asenetcky.github.io/strata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 strata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://asenetcky.github.io/strata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Senetcky. Author, maintainer, copyright holder.","code":""},{"path":"https://asenetcky.github.io/strata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Senetcky (2025). strata: Simple Framework Simple Automation. R package version 1.4.0.9000, https://asenetcky.github.io/strata/, https://github.com/asenetcky/strata.","code":"@Manual{,   title = {strata: Simple Framework for Simple Automation},   author = {Alexander Senetcky},   year = {2025},   note = {R package version 1.4.0.9000, https://asenetcky.github.io/strata/},   url = {https://github.com/asenetcky/strata}, }"},{"path":"https://asenetcky.github.io/strata/index.html","id":"strata","dir":"","previous_headings":"","what":"Simple Framework for Simple Automation","title":"Simple Framework for Simple Automation","text":"goal strata provide framework workflow automation reproducible analyses R users teams may access many modern automation tooling /otherwise resource-constrained. Strata aims simple allow users adopt minimal changes existing code use whatever automation access . one target file users need automate, main.R, run entire project settings specified build strata code. Strata designed get users‚Äô way play nice packages like renv, cronR, taskscheduleR.","code":""},{"path":"https://asenetcky.github.io/strata/index.html","id":"id_Ô∏è-installation","dir":"","previous_headings":"","what":"‚öôÔ∏è Installation","title":"Simple Framework for Simple Automation","text":"install latest CRAN release, just run: can install development version strata GitHub :","code":"install.packages(\"strata\") # install.packages(\"pak\") pak::pak(\"asenetcky/strata\")"},{"path":"https://asenetcky.github.io/strata/index.html","id":"id_-features","dir":"","previous_headings":"","what":"‚ú® Features","title":"Simple Framework for Simple Automation","text":"Easily turn R project automated one one-click affair Easily view project‚Äôs execution plan - hunting pecking around find script sources next juggling multiple automated tasks - single automation target - main.R main() function Simple consistent built-logging Manage code execution .toml files Quick build options rapid prototyping","code":""},{"path":"https://asenetcky.github.io/strata/index.html","id":"id_-target-audience","dir":"","previous_headings":"","what":"üéØ Target Audience","title":"Simple Framework for Simple Automation","text":"strata primarily developers looking simplicity framework can adopt R projects. strata help users quickly consistently execute code. Configurations stored plain text .toml files can tracked version control. Users aren‚Äôt looking learn new syntax, change way write code may feel right home strata requires users build file structure specific way using provided functions. Users able easily ‚Äòone-click‚Äô execute entire project sequence specify, /easily implement layer automation road. Developers limited access advanced automation tools find strata great way prep projects implement task scheduling automation already computers. Users access advanced tooling looking detailed features may needs met strata may still appreciate simplicity logging rapid prototyping.","code":""},{"path":"https://asenetcky.github.io/strata/index.html","id":"id_-getting-started","dir":"","previous_headings":"","what":"üöÄ Getting Started","title":"Simple Framework for Simple Automation","text":"strata provides users framework easier automation tools already hand. Users want make folder strata project. strata works shines best bundled inside RStudio project folder coupled renv package.","code":""},{"path":"https://asenetcky.github.io/strata/index.html","id":"build-strata","dir":"","previous_headings":"üöÄ Getting Started","what":"Build Strata","title":"Simple Framework for Simple Automation","text":"loading attaching strata package users want start hollowing spaces code live. Calling build_stratum() providing name path project folder add ‚Äòstratum‚Äô project, well main.R script .strata.toml file.","code":"library(strata)  # Make a folder for your strata project my_project_folder <- fs::dir_create(fs::file_temp())  # build_stratum creates a folder, a stratum,  where you can group together # similar code into sub-folder/s called a lamina/ae  # pro tip: build_stratum invisibly returns the stratum path stratum_path <-   build_stratum(     stratum_name = \"project_setup\",     project_path = my_project_folder,     order = 1   )  # let's take a look at what was made  fs::dir_tree(my_project_folder, recurse = TRUE, all = TRUE) #> /tmp/Rtmpmv1b6d/file7919cb982350 #> ‚îú‚îÄ‚îÄ main.R #> ‚îî‚îÄ‚îÄ strata #>     ‚îú‚îÄ‚îÄ .strata.toml #>     ‚îî‚îÄ‚îÄ project_setup  # let's take a look at that .toml file view_toml(fs::path(my_project_folder, \"strata\", \".strata.toml\")) #> # A tibble: 1 √ó 4 #>   type   name          order created    #>   <chr>  <chr>         <int> <date>     #> 1 strata project_setup     1 2025-02-02  # our stratum is empty, let's change that in the next section"},{"path":"https://asenetcky.github.io/strata/index.html","id":"build-laminae","dir":"","previous_headings":"üöÄ Getting Started","what":"Build Laminae","title":"Simple Framework for Simple Automation","text":"Next users want call build_lamina() name path stratum created previous step. creates sub-folder stratum R code live, well .laminae.toml. ‚Äôs good group like-code together inside ‚Äòlamina‚Äô. Users can many stratum needed many laminae associated R scripts users deem necessary.","code":"# remember we still have that stratum path from the previous section # let's build some laminae you might see inside a stratum called 'project_setup' # remember you can 1 or more R script inside of a lamina  # This could be a lamina that contains code that # sets up your libraries for the project build_lamina(   stratum_path = stratum_path,   lamina_name = \"libraries\",   order = 1 )  # This could be a lamina that contains code that API keys and other credentials # and/or makes use of the excellent `keyring` package build_lamina(   stratum_path = stratum_path,   lamina_name = \"authentication\",   order = 2 )  # This could be a lamina that contains code for setting up your # database connections etc... build_lamina(   stratum_path = stratum_path,   lamina_name = \"connections\",   order = 3 )  # Don't worry if you forget to specify an order, strata will assign one for you! # Always check that the order assigned is the order you want  fs::dir_tree(my_project_folder, recurse = TRUE, all = TRUE) #> /tmp/Rtmpmv1b6d/file7919cb982350 #> ‚îú‚îÄ‚îÄ main.R #> ‚îî‚îÄ‚îÄ strata #>     ‚îú‚îÄ‚îÄ .strata.toml #>     ‚îî‚îÄ‚îÄ project_setup #>         ‚îú‚îÄ‚îÄ .laminae.toml #>         ‚îú‚îÄ‚îÄ authentication #>         ‚îú‚îÄ‚îÄ connections #>         ‚îî‚îÄ‚îÄ libraries view_toml(fs::path(stratum_path, \".laminae.toml\")) #> # A tibble: 3 √ó 5 #>   type    name           order skip_if_fail created    #>   <chr>   <chr>          <int> <lgl>        <date>     #> 1 laminae libraries          1 FALSE        2025-02-02 #> 2 laminae authentication     2 FALSE        2025-02-02 #> 3 laminae connections        3 FALSE        2025-02-02"},{"path":"https://asenetcky.github.io/strata/index.html","id":"adding-r-scripts","dir":"","previous_headings":"üöÄ Getting Started","what":"Adding R Scripts","title":"Simple Framework for Simple Automation","text":"Now users stratum laminae set , can begin adding R scripts laminae. Users can drag drop existing code laminae folders write code directly laminae.","code":"# let's fill in the laminae with some placeholder code auth_path <- fs::path(stratum_path, \"authentication\", \"auth_code.R\") lib_path <- fs::path(stratum_path, \"libraries\", \"lib_code.R\") conn_path <- fs::path(stratum_path, \"connections\", \"conn_code.R\")  authentication_code <- \"print('I am your authentication setup code')\" libraries_code <- \"print('I am your library setup code')\" connections_code <- \"print('I am your connection setup code')\"  purrr::walk(   c(auth_path, lib_path, conn_path),   \\(r_file) fs::file_create(r_file) )  purrr::walk2(   c(auth_path, lib_path, conn_path),   c(authentication_code, libraries_code, connections_code),   \\(r_file, code) cat(code, file = r_file, append = TRUE) )"},{"path":"https://asenetcky.github.io/strata/index.html","id":"taking-a-look","dir":"","previous_headings":"üöÄ Getting Started","what":"Taking a Look","title":"Simple Framework for Simple Automation","text":"Adding folders files well good, users keep track ? strata covered. readme showcased already, let‚Äôs recap look entire execution plan. Users can now view_toml() see contents .toml files edit/replace contents well. observability work-horse users likely survey_strata(). Users can run survey_strata() get need--know project. important note survey_strata() ‚Äúsees‚Äù project eyes .toml files, actual file structure, might reflect true nature strata project. stratum lamina wasn‚Äôt built build_stratum() build_lamina() added hand .tomls show survey. provides users flexibility weave strata project projects test new ideas without affecting execution plan project.","code":"# let's take a look at the project structure now fs::dir_tree(my_project_folder, recurse = TRUE, all = TRUE) #> /tmp/Rtmpmv1b6d/file7919cb982350 #> ‚îú‚îÄ‚îÄ main.R #> ‚îî‚îÄ‚îÄ strata #>     ‚îú‚îÄ‚îÄ .strata.toml #>     ‚îî‚îÄ‚îÄ project_setup #>         ‚îú‚îÄ‚îÄ .laminae.toml #>         ‚îú‚îÄ‚îÄ authentication #>         ‚îÇ   ‚îî‚îÄ‚îÄ auth_code.R #>         ‚îú‚îÄ‚îÄ connections #>         ‚îÇ   ‚îî‚îÄ‚îÄ conn_code.R #>         ‚îî‚îÄ‚îÄ libraries #>             ‚îî‚îÄ‚îÄ lib_code.R  # Look at all those files now - let's grab the paths of only the .tomls survey_tomls(my_project_folder) #> /tmp/Rtmpmv1b6d/file7919cb982350/strata/.strata.toml #> /tmp/Rtmpmv1b6d/file7919cb982350/strata/project_setup/.laminae.toml survey_strata(my_project_folder) #> # A tibble: 3 √ó 7 #>   execution_order stratum_name  lamina_name script_name script_path skip_if_fail #>             <int> <chr>         <chr>       <chr>       <fs::path>  <lgl>        #> 1               1 project_setup libraries   lib_code    ‚Ä¶lib_code.R FALSE        #> 2               2 project_setup authentica‚Ä¶ auth_code   ‚Ä¶uth_code.R FALSE        #> 3               3 project_setup connections conn_code   ‚Ä¶onn_code.R FALSE        #> # ‚Ñπ 1 more variable: created <date>"},{"path":"https://asenetcky.github.io/strata/index.html","id":"running-the-project","dir":"","previous_headings":"üöÄ Getting Started","what":"Running the Project","title":"Simple Framework for Simple Automation","text":"main.R associated function main() entry point project target users automate execution . executed main() read .toml files begin sourcing pipelines order specified user/.toml files, within stratum execute laminae order specified user specific .toml file. Within lamina scripts sourced however user‚Äôs operating system ordered scripts, often alphabetically. two ways uaer ‚Äúrun‚Äù project: Users can source main.R script auto-generated building stratum. Users can also just execute main() function directly, needed path project. Users can also silence logging messages desire, however, messages generated code laminae still printed console. ‚Äôs core functionality strata! Users build project strata stays way.","code":"source(fs::path(my_project_folder, \"main.R\")) #> [2025-02-02 14:23:05.5955] INFO: Strata started  #> [2025-02-02 14:23:05.5959] INFO: Stratum: project_setup initialized  #> [2025-02-02 14:23:05.5962] INFO: Lamina: libraries initialized  #> [2025-02-02 14:23:05.5965] INFO: Executing: lib_code  #> [1] \"I am your library setup code\" #> [2025-02-02 14:23:05.5971] INFO: Lamina: libraries finished  #> [2025-02-02 14:23:05.5973] INFO: Lamina: authentication initialized  #> [2025-02-02 14:23:05.5975] INFO: Executing: auth_code  #> [1] \"I am your authentication setup code\" #> [2025-02-02 14:23:05.5980] INFO: Lamina: authentication finished  #> [2025-02-02 14:23:05.5982] INFO: Lamina: connections initialized  #> [2025-02-02 14:23:05.5985] INFO: Executing: conn_code  #> [1] \"I am your connection setup code\" #> [2025-02-02 14:23:05.5991] INFO: Strata finished - duration: 0.004 seconds main(my_project_folder, silent = TRUE) #> [1] \"I am your library setup code\" #> [1] \"I am your authentication setup code\" #> [1] \"I am your connection setup code\""},{"path":"https://asenetcky.github.io/strata/index.html","id":"id_-going-a-step-further","dir":"","previous_headings":"","what":"‚ö° Going a Step Further","title":"Simple Framework for Simple Automation","text":"strata project, now ? might useful organize disparate parts project, turn one-click affair, can better.","code":""},{"path":"https://asenetcky.github.io/strata/index.html","id":"implementing-automation","dir":"","previous_headings":"‚ö° Going a Step Further","what":"Implementing Automation","title":"Simple Framework for Simple Automation","text":"Users may access lastest greatest automation tools orchestrators, users likely access something like windows task scheduler, cron jobs similar. fact already two great packages can help users automate R scripts. - cronR - taskscheduleR. strata makes easy automate entire project worth code packages. Just point packages‚Äô functions main.R script main() function ‚Äôs . Using cronR: Using taskscheduleR:","code":"library(cronR)  tmp <- fs::dir_create(fs::file_temp()) build_quick_strata_project(tmp, 2, 2)  ## Run our project every thursday at 0700 file <- fs::path(tmp, \"main.R\") cmd <- cron_rscript(file)  cmd  cron_add(cmd, frequency = \"monthly\", at = \"7AM\", days_of_week = \"THU\") cron_njobs()  cron_ls() cron_clear(ask = TRUE)  fs::dir_delete(tmp) library(taskscheduleR)  tmp <- fs::dir_create(fs::file_temp()) build_quick_strata_project(tmp, 2, 2)  ## Run our project every thursday at 0700 taskscheduler_create(   taskname = \"strata\",   rscript = fs::path(tmp, \"main.R\"),   schedule = \"WEEKLY\",   starttime = \"07:00\",   days = \"THU\",   startdate = \"12/01/2024\" )  taskscheduler_ls() |>   dplyr::filter(TaskName == \"strata\") |>   dplyr::select(HostName:Status)  taskscheduler_delete(taskname = \"strata\")  fs::dir_delete(tmp)"},{"path":[]},{"path":"https://asenetcky.github.io/strata/index.html","id":"logging","dir":"","previous_headings":"üéÅ Additional Features","what":"Logging","title":"Simple Framework for Simple Automation","text":"strata provides basic, consistent logging functions used run time, available use inside users‚Äô code desire. Logging can routed stdout stderr can piped wherever users want store logs. Logging format consistent - timestamp always 26 characters long, including square brackets timestamp always YEAR-MONTH-DAY HOUR:MINUTE:SECOND.XXXX log level follows timestamp space ends colon message follows log level separated space Logging kept intentionally simple, can still parsed survey_log() resulting tibble analyzed however user wishes log_message() log_error() invisibly return character string copy output. survey_log() return tibble log file contents view. output log_message() log_error() functions returned log, output ignored. example building fake log line line, normally log built stdout stderr piped log file user automation.","code":"# The core logging function is log_message, and users can mold it to their needs log_message(   message = \"This is a message\",   level = \"INFO\", # Use whatever \"level\" you want   out_or_err = \"OUT\" # Send to stdout ) #> [2025-02-02 14:23:05.6514] INFO: This is a message  # Users can sending warnings log_message(   message = \"This is a warning\",   level = \"WARN\",   out_or_err = \"ERR\" # Send to stderr if user wants ) #> [2025-02-02 14:23:05.6521] WARN: This is a warning  # log_error() is a wrapper around log_message that sends messages to stderr log_error(\"This is an error message\") #> [2025-02-02 14:23:05.6531] ERROR: This is an error message  # log_total_time() is a simple function that  always prints the time # difference in seconds  duration <-   log_total_time(     begin = Sys.time(),     end = Sys.time() + 999   )  log_message(   paste(\"This took\", duration, \"seconds\"),   level = \"INFO\",   out_or_err = \"OUT\" ) #> [2025-02-02 14:23:05.6543] INFO: This took 999 seconds log_output <- log_message(\"I am a log message\") #> [2025-02-02 14:23:05.6581] INFO: I am a log message log_output #> [1] \"[2025-02-02 14:23:05.6581] INFO: I am a log message\" # Build an example log example_log <- fs::file_create(fs::file_temp(ext = \"log\"))  # show file is empty readr::read_lines(example_log) #> character(0)  # add log message line1 <- log_message(\"strata started\") #> [2025-02-02 14:23:05.6660] INFO: strata started line1 <- paste0(line1, \"\\n\") cat(line1, file = example_log, append = TRUE)  # nonsense output to be ignored line2 <- \"I am a line of nonsense\" line2 <- paste0(line2, \"\\n\") cat(line2, file = example_log, append = TRUE)  # another log message line3 <- log_message(\"strata finished\") #> [2025-02-02 14:23:05.6680] INFO: strata finished line3 <- paste0(line3, \"\\n\") cat(line3, file = example_log, append = TRUE)  # parse log and return tibble # notice that the line numbers are preserved, even if content is ignored survey_log(example_log) #> # A tibble: 2 √ó 4 #>   line_number timestamp           level message         #>         <int> <dttm>              <chr> <chr>           #> 1           1 2025-02-02 14:23:05 INFO  strata started  #> 2           3 2025-02-02 14:23:05 INFO  strata finished  # clean up fs::file_delete(example_log)"},{"path":"https://asenetcky.github.io/strata/index.html","id":"quick-build","dir":"","previous_headings":"üéÅ Additional Features","what":"Quick Build","title":"Simple Framework for Simple Automation","text":"strata two ‚Äúquick‚Äù build options users. build_quick_strata_project() create project stratum laminae placeholder code. great testing ideas deploying current code strata project quickly possible sorting names .tomls later. build_outline_strata_project() create project strata laminae based outline dataframe provided user. great users specific vision mind already.","code":"tmp <- fs::dir_create(fs::file_temp()) build_quick_strata_project(   project_path = tmp,   num_strata = 2,   num_laminae_per = 3 )  fs::dir_tree(tmp) #> /tmp/Rtmpmv1b6d/file7919c1777424d #> ‚îú‚îÄ‚îÄ main.R #> ‚îî‚îÄ‚îÄ strata #>     ‚îú‚îÄ‚îÄ stratum_1 #>     ‚îÇ   ‚îú‚îÄ‚îÄ s1_lamina_1 #>     ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ my_code.R #>     ‚îÇ   ‚îú‚îÄ‚îÄ s1_lamina_2 #>     ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ my_code.R #>     ‚îÇ   ‚îî‚îÄ‚îÄ s1_lamina_3 #>     ‚îÇ       ‚îî‚îÄ‚îÄ my_code.R #>     ‚îî‚îÄ‚îÄ stratum_2 #>         ‚îú‚îÄ‚îÄ s2_lamina_1 #>         ‚îÇ   ‚îî‚îÄ‚îÄ my_code.R #>         ‚îú‚îÄ‚îÄ s2_lamina_2 #>         ‚îÇ   ‚îî‚îÄ‚îÄ my_code.R #>         ‚îî‚îÄ‚îÄ s2_lamina_3 #>             ‚îî‚îÄ‚îÄ my_code.R tmp <- fs::dir_create(fs::file_temp())  outline <-   dplyr::tibble(     project_path = tmp,     stratum_name = c(       rep(\"env_setup\", 2),       rep(\"data_pull\", 2),       \"data_wrangle\",       \"build_model\",       \"build_report\"     ),     stratum_order = c(       rep(1, 2),       rep(2, 2),       3,       4,       5     ),     lamina_name = c(       c(\"authentication\", \"connections\"),       c(\"sql-source1\", \"sql-source2\"),       \"clean_data\",       \"tidy_models\",       \"quarto_report\"     ),     lamina_order = c(1, 2, 1, 2, 1, 1, 1),     skip_if_fail = FALSE   )  dplyr::glimpse(outline) #> Rows: 7 #> Columns: 6 #> $ project_path  <fs::path> \"/tmp/Rtmpmv1b6d/file7919c5a1ef62e\", \"/tmp/Rtmpmv1b‚Ä¶ #> $ stratum_name  <chr> \"env_setup\", \"env_setup\", \"data_pull\", \"data_pull\", \"dat‚Ä¶ #> $ stratum_order <dbl> 1, 1, 2, 2, 3, 4, 5 #> $ lamina_name   <chr> \"authentication\", \"connections\", \"sql-source1\", \"sql-sou‚Ä¶ #> $ lamina_order  <dbl> 1, 2, 1, 2, 1, 1, 1 #> $ skip_if_fail  <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE  build_outlined_strata_project(outline)  fs::dir_tree(tmp) #> /tmp/Rtmpmv1b6d/file7919c5a1ef62e #> ‚îú‚îÄ‚îÄ main.R #> ‚îî‚îÄ‚îÄ strata #>     ‚îú‚îÄ‚îÄ build_model #>     ‚îÇ   ‚îî‚îÄ‚îÄ tidy_models #>     ‚îÇ       ‚îî‚îÄ‚îÄ my_code.R #>     ‚îú‚îÄ‚îÄ build_report #>     ‚îÇ   ‚îî‚îÄ‚îÄ quarto_report #>     ‚îÇ       ‚îî‚îÄ‚îÄ my_code.R #>     ‚îú‚îÄ‚îÄ data_pull #>     ‚îÇ   ‚îú‚îÄ‚îÄ sql-source1 #>     ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ my_code.R #>     ‚îÇ   ‚îî‚îÄ‚îÄ sql-source2 #>     ‚îÇ       ‚îî‚îÄ‚îÄ my_code.R #>     ‚îú‚îÄ‚îÄ data_wrangle #>     ‚îÇ   ‚îî‚îÄ‚îÄ clean_data #>     ‚îÇ       ‚îî‚îÄ‚îÄ my_code.R #>     ‚îî‚îÄ‚îÄ env_setup #>         ‚îú‚îÄ‚îÄ authentication #>         ‚îÇ   ‚îî‚îÄ‚îÄ my_code.R #>         ‚îî‚îÄ‚îÄ connections #>             ‚îî‚îÄ‚îÄ my_code.R survey_strata(tmp) #> # A tibble: 7 √ó 7 #>   execution_order stratum_name lamina_name  script_name script_path skip_if_fail #>             <int> <chr>        <chr>        <chr>       <fs::path>  <lgl>        #> 1               1 env_setup    authenticat‚Ä¶ my_code     ‚Ä¶/my_code.R FALSE        #> 2               2 env_setup    connections  my_code     ‚Ä¶/my_code.R FALSE        #> 3               3 data_pull    sql-source1  my_code     ‚Ä¶/my_code.R FALSE        #> 4               4 data_pull    sql-source2  my_code     ‚Ä¶/my_code.R FALSE        #> 5               5 data_wrangle clean_data   my_code     ‚Ä¶/my_code.R FALSE        #> 6               6 build_model  tidy_models  my_code     ‚Ä¶/my_code.R FALSE        #> 7               7 build_report quarto_repo‚Ä¶ my_code     ‚Ä¶/my_code.R FALSE        #> # ‚Ñπ 1 more variable: created <date>"},{"path":"https://asenetcky.github.io/strata/index.html","id":"ad-hoc","dir":"","previous_headings":"üéÅ Additional Features","what":"Ad-hoc","title":"Simple Framework for Simple Automation","text":"ability run entire project main() great, users want run pieces project ad-hoc, inconvenient source disparate pieces code individually, possibly error-prone well. Users can execute project piecemeal adhoc_stratum() adhoc_lamina(), adhoc(). adhoc_stratum() source code inside every lamina stratum, ignoring strata. adhoc_lamina() execute specified lamina code therein contained, ignoring laminae inside stratum strata. interactive sessions, adhoc() execute stratum lamina based name provided user. Users won‚Äôt remember paths. adhoc() default current working directory, users can optionally provide project path. multiple exact matches, adhoc() prompt users console pick intended target. users opt prompted adhoc() execute first match finds.","code":"tmp <- fs::dir_create(fs::file_temp())  build_quick_strata_project(tmp, 2, 2)  adhoc_stratum(   stratum_path = fs::path(tmp, \"strata\", \"stratum_1\"),   silent = FALSE ) #> [2025-02-02 14:23:06.3630] INFO: Strata started  #> [2025-02-02 14:23:06.3634] INFO: Stratum: stratum_1 initialized  #> [2025-02-02 14:23:06.3636] INFO: Lamina: s1_lamina_1 initialized  #> [2025-02-02 14:23:06.3640] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.3645] INFO: Lamina: s1_lamina_1 finished  #> [2025-02-02 14:23:06.3648] INFO: Lamina: s1_lamina_2 initialized  #> [2025-02-02 14:23:06.3650] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.3654] INFO: Strata finished - duration: 0.0026 seconds # using our quick build project from above adhoc_lamina(   lamina_path = fs::path(tmp, \"strata\", \"stratum_2\", \"s2_lamina_2\"),   silent = FALSE ) #> [2025-02-02 14:23:06.4207] INFO: Strata started  #> [2025-02-02 14:23:06.4211] INFO: Stratum: stratum_2 initialized  #> [2025-02-02 14:23:06.4213] INFO: Lamina: s2_lamina_2 initialized  #> [2025-02-02 14:23:06.4216] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.4222] INFO: Strata finished - duration: 0.0016 seconds # using our quick build project from above adhoc(   name = \"s2_lamina_1\",   project_path = tmp,   silent = FALSE,   prompt = FALSE )"},{"path":"https://asenetcky.github.io/strata/index.html","id":"managing-tomls","dir":"","previous_headings":"üéÅ Additional Features","what":"Managing .tomls","title":"Simple Framework for Simple Automation","text":"Users able find read .toml files project survey_tomls() view_toml() functions. Users also options editing .toml files well. Users always option use favorite text editor edit one .toml files. files may hidden, survey_tomls() provide proper paths. Users can confirm edits view_toml() confirm expected changes appear tibble. Users can opt work edit_toml() function stay completely inside R code. strongly advised users save copy target .toml file memory using view_toml() fall back . Users can take copy edit . required edit_toml() file path original .toml file tibble content wish replace original .toml file . originals backed , now users can edit .toml files see fit. Users notice addition changes made, backup file created directory extension .bak. Version control first line defense protect loss, nice safety net. newest backups always clobber oldest, care needs taken. Users can now check execution plan see changes taken effect changed entire project‚Äôs execution order.","code":"# create temporary folder tmp <- fs::dir_create(fs::file_temp())  # quick build for demonstration purposes build_quick_strata_project(tmp, 2, 2)  # survey the .tomls toml_list <-   survey_tomls(tmp)  toml_list #> /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/.strata.toml #> /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/stratum_1/.laminae.toml #> /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/stratum_2/.laminae.toml   # create copies original_strata_toml <- view_toml(toml_list[1]) original_strata_toml #> # A tibble: 2 √ó 4 #>   type   name      order created    #>   <chr>  <chr>     <int> <date>     #> 1 strata stratum_1     1 2025-02-02 #> 2 strata stratum_2     2 2025-02-02  original_lamina1_toml <- view_toml(toml_list[2]) original_lamina1_toml #> # A tibble: 2 √ó 5 #>   type    name        order skip_if_fail created    #>   <chr>   <chr>       <int> <lgl>        <date>     #> 1 laminae s1_lamina_1     1 FALSE        2025-02-02 #> 2 laminae s1_lamina_2     2 FALSE        2025-02-02  # original execution plan original_plan <- survey_strata(tmp) # edit the strata .toml # swap the order of the strata execution new_strata_toml <-   original_strata_toml |>   dplyr::mutate(     order = c(2, 1)   )  # make the edits edit_toml(   original_toml_path = toml_list[1],   new_toml_dataframe = new_strata_toml ) #> [2025-02-02 14:23:06.6398] INFO: Backed up /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/.strata.toml to /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/.strata.bak  # check the order view_toml(toml_list[1]) #> # A tibble: 2 √ó 4 #>   type   name      order created    #>   <chr>  <chr>     <int> <date>     #> 1 strata stratum_2     1 2025-02-02 #> 2 strata stratum_1     2 2025-02-02 # edit the lamina toml # swap the order of the lamina execution # make laminae skip if fail new_lamina_toml <-   original_lamina1_toml |>   dplyr::mutate(     order = c(2, 1),     skip_if_fail = TRUE   )  # make the edits edit_toml(   original_toml_path = toml_list[2],   new_toml_dataframe = new_lamina_toml ) #> [2025-02-02 14:23:06.6686] INFO: Backed up /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/stratum_1/.laminae.toml to /tmp/Rtmpmv1b6d/file7919c7c48a466/strata/stratum_1/.laminae.bak  # check the order and skip_if_fail view_toml(toml_list[2]) #> # A tibble: 2 √ó 5 #>   type    name        order skip_if_fail created    #>   <chr>   <chr>       <int> <lgl>        <date>     #> 1 laminae s1_lamina_2     1 TRUE         2025-02-02 #> 2 laminae s1_lamina_1     2 TRUE         2025-02-02 # check execution order for the entire project survey_strata(tmp) #> # A tibble: 4 √ó 7 #>   execution_order stratum_name lamina_name script_name script_path  skip_if_fail #>             <int> <chr>        <chr>       <chr>       <fs::path>   <lgl>        #> 1               1 stratum_2    s2_lamina_1 my_code     ‚Ä¶1/my_code.R FALSE        #> 2               2 stratum_2    s2_lamina_2 my_code     ‚Ä¶2/my_code.R FALSE        #> 3               3 stratum_1    s1_lamina_2 my_code     ‚Ä¶2/my_code.R TRUE         #> 4               4 stratum_1    s1_lamina_1 my_code     ‚Ä¶1/my_code.R TRUE         #> # ‚Ñπ 1 more variable: created <date>"},{"path":"https://asenetcky.github.io/strata/index.html","id":"skip-if-fail","dir":"","previous_headings":"üéÅ Additional Features","what":"Skip if Fail","title":"Simple Framework for Simple Automation","text":"Users can specify lamina skipped fails setting skip_if_fail TRUE building laminae, inside .laminae.toml files. useful users prototyping new additions strata project. Use caution, intended replacement robust error handling implemented user within code. Users see log lamina failed skipped rest project executed.","code":"tmp <- fs::dir_create(fs::file_temp())  build_quick_strata_project(tmp, 2, 2)  # let's add a lamina that skips if it fails build_lamina(   stratum_path = fs::path(tmp, \"strata\", \"stratum_1\"),   lamina_name = \"bad_lamina\",   order = 2,   skip_if_fail = TRUE ) #> [2025-02-02 14:23:06.8969] WARN: Duplicate orders found in the .laminae.toml file, reordering  #> [2025-02-02 14:23:06.8993] INFO: Backed up /tmp/Rtmpmv1b6d/file7919c5e22871b/strata/stratum_1/.laminae.toml to /tmp/Rtmpmv1b6d/file7919c5e22871b/strata/stratum_1/.laminae.bak  # lets add the code that will fail bad_code <- \"stop('I am bad code')\" bad_path <- fs::path(tmp, \"strata\", \"stratum_1\", \"bad_lamina\", \"bad_code.R\") fs::file_create(bad_path) cat(bad_code, file = bad_path)  # let's run the project main(tmp) #> [2025-02-02 14:23:06.9575] INFO: Strata started  #> [2025-02-02 14:23:06.9579] INFO: Stratum: stratum_1 initialized  #> [2025-02-02 14:23:06.9581] INFO: Lamina: s1_lamina_1 initialized  #> [2025-02-02 14:23:06.9584] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.9590] INFO: Lamina: s1_lamina_1 finished  #> [2025-02-02 14:23:06.9593] INFO: Lamina: bad_lamina initialized  #> [2025-02-02 14:23:06.9595] INFO: Executing: bad_code #> [2025-02-02 14:23:06.9599] ERROR: Error in bad_code #> [2025-02-02 14:23:06.9604] INFO: Lamina: bad_lamina finished  #> [2025-02-02 14:23:06.9607] INFO: Lamina: s1_lamina_2 initialized  #> [2025-02-02 14:23:06.9609] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.9614] INFO: Stratum: stratum_1 finished  #> [2025-02-02 14:23:06.9616] INFO: Stratum: stratum_2 initialized  #> [2025-02-02 14:23:06.9618] INFO: Lamina: s1_lamina_2 finished  #> [2025-02-02 14:23:06.9621] INFO: Lamina: s2_lamina_1 initialized  #> [2025-02-02 14:23:06.9623] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.9627] INFO: Lamina: s2_lamina_1 finished  #> [2025-02-02 14:23:06.9630] INFO: Lamina: s2_lamina_2 initialized  #> [2025-02-02 14:23:06.9632] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-02 14:23:06.9636] INFO: Strata finished - duration: 0.0062 seconds"},{"path":"https://asenetcky.github.io/strata/reference/adhoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a single stratum or lamina ad hoc by its name ‚Äî adhoc","title":"Execute a single stratum or lamina ad hoc by its name ‚Äî adhoc","text":"interactive sessions, adhoc() execute stratum lamina matches name provided user. multiple matches found, user prompted choose one execute.  matches found, error thrown. project_path default current working directory, unless path provided user.","code":""},{"path":"https://asenetcky.github.io/strata/reference/adhoc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a single stratum or lamina ad hoc by its name ‚Äî adhoc","text":"","code":"adhoc(name, prompt = TRUE, silent = FALSE, project_path = NULL)"},{"path":"https://asenetcky.github.io/strata/reference/adhoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a single stratum or lamina ad hoc by its name ‚Äî adhoc","text":"name Name stratum lamina. prompt Prompt user choice multiple matches found? Default TRUE. silent Suppress log messages? FALSE (default), log messages printed console. TRUE, log messages suppressed. project_path path strata project folder.","code":""},{"path":"https://asenetcky.github.io/strata/reference/adhoc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a single stratum or lamina ad hoc by its name ‚Äî adhoc","text":"invisible data frame execution plan matched name.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/adhoc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a single stratum or lamina ad hoc by its name ‚Äî adhoc","text":"","code":"if (FALSE) { # \\dontrun{ tmp <- fs::dir_create(fs::file_temp()) result <- strata::build_quick_strata_project(tmp, 3, 2) adhoc(\"stratum_1\") fs::dir_delete(tmp) } # }"},{"path":"https://asenetcky.github.io/strata/reference/adhoc_lamina.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a single lamina ad hoc ‚Äî adhoc_lamina","title":"Execute a single lamina ad hoc ‚Äî adhoc_lamina","text":"adhoc_lamina() execute lamina code therein contained specified lamina_path without log messages.","code":""},{"path":"https://asenetcky.github.io/strata/reference/adhoc_lamina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a single lamina ad hoc ‚Äî adhoc_lamina","text":"","code":"adhoc_lamina(lamina_path, silent = FALSE)"},{"path":"https://asenetcky.github.io/strata/reference/adhoc_lamina.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a single lamina ad hoc ‚Äî adhoc_lamina","text":"lamina_path Path lamina. silent Suppress log messages? FALSE (default), log messages printed console. TRUE, log messages suppressed.","code":""},{"path":"https://asenetcky.github.io/strata/reference/adhoc_lamina.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a single lamina ad hoc ‚Äî adhoc_lamina","text":"invisible data frame execution plan.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/adhoc_lamina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a single lamina ad hoc ‚Äî adhoc_lamina","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) result <- strata::build_quick_strata_project(tmp, 1, 1) adhoc_lamina(   fs::path(tmp, \"strata\", \"stratum_1\", \"s1_lamina_1\"), ) #> [2025-02-03 21:45:55.5442] INFO: Strata started  #> [2025-02-03 21:45:55.5449] INFO: Stratum: stratum_1 initialized  #> [2025-02-03 21:45:55.5453] INFO: Lamina: s1_lamina_1 initialized  #> [2025-02-03 21:45:55.5458] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:55.5474] INFO: Strata finished - duration: 0.0036 seconds  fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/adhoc_stratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a single stratum ad hoc ‚Äî adhoc_stratum","title":"Execute a single stratum ad hoc ‚Äî adhoc_stratum","text":"adhoc_stratum() execute stratum, child laminae code therein contained specified stratum_path without log messages.","code":""},{"path":"https://asenetcky.github.io/strata/reference/adhoc_stratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a single stratum ad hoc ‚Äî adhoc_stratum","text":"","code":"adhoc_stratum(stratum_path, silent = FALSE)"},{"path":"https://asenetcky.github.io/strata/reference/adhoc_stratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a single stratum ad hoc ‚Äî adhoc_stratum","text":"stratum_path Path stratum folder silent Suppress log messages? FALSE (default), log messages printed console. TRUE, log messages suppressed.","code":""},{"path":"https://asenetcky.github.io/strata/reference/adhoc_stratum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a single stratum ad hoc ‚Äî adhoc_stratum","text":"invisible data frame execution plan.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/adhoc_stratum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a single stratum ad hoc ‚Äî adhoc_stratum","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) result <- strata::build_quick_strata_project(tmp, 1, 1) adhoc_stratum(   fs::path(tmp, \"strata\", \"stratum_1\"), ) #> [2025-02-03 21:45:55.8378] INFO: Strata started  #> [2025-02-03 21:45:55.8526] INFO: Stratum: stratum_1 initialized  #> [2025-02-03 21:45:55.8531] INFO: Lamina: s1_lamina_1 initialized  #> [2025-02-03 21:45:55.8537] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:55.8545] INFO: Strata finished - duration: 0.0169 seconds  fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/build_lamina.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a lamina to the project space ‚Äî build_lamina","title":"Add a lamina to the project space ‚Äî build_lamina","text":"Add lamina project space","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_lamina.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a lamina to the project space ‚Äî build_lamina","text":"","code":"build_lamina(lamina_name, stratum_path, order = 1, skip_if_fail = FALSE)"},{"path":"https://asenetcky.github.io/strata/reference/build_lamina.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a lamina to the project space ‚Äî build_lamina","text":"lamina_name Name lamina stratum_path Path stratum folder order Execution order, default 1 skip_if_fail Skip lamina fails, default FALSE","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_lamina.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a lamina to the project space ‚Äî build_lamina","text":"invisibly returns fs::path lamina","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_lamina.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a lamina to the project space ‚Äî build_lamina","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) result_stratum_path <- build_stratum(\"my_stratum_name\", tmp) result_lamina_path <- build_lamina(\"my_lamina_name\", result_stratum_path) result_lamina_path #> /tmp/RtmpKn24Yq/file1e5077e85c97/strata/my_stratum_name/my_lamina_name fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/build_outlined_strata_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","title":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","text":"Users specific idea mind already can map intended project structure outline dataframe use build_outlined_strata_project() build project using dataframe blueprint.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_outlined_strata_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","text":"","code":"build_outlined_strata_project(outline)"},{"path":"https://asenetcky.github.io/strata/reference/build_outlined_strata_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","text":"outline data frame following columns: project_path, stratum_name, stratum_order, lamina_name, lamina_order, skip_if_fail.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_outlined_strata_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","text":"invisible dataframe survey strata project.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_outlined_strata_project.html","id":"outline","dir":"Reference","previous_headings":"","what":"Outline","title":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","text":"outline dataframe following columns: project_path: path project. stratum_name: name stratum. stratum_order: order stratum. lamina_name: name lamina. lamina_order: order lamina within stratum. skip_if_fail: logical indicating lamina skipped fails. row outline dataframe represents stratum lamina combination created project.  Placeholder R script created lamina directory help remind user replace code. can 6 columns, can missing values dataframe.  stratum_name stratum_order columns must contain unique values.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_outlined_strata_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a strata project from an outline dataframe ‚Äî build_outlined_strata_project","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) outline <- tibble::tibble(   project_path = tmp,   stratum_name = c(\"test1\", \"test2\"),   stratum_order = c(1, 2),   lamina_name = c(\"lamina1\", \"lamina1\"),   lamina_order = c(1, 2),   skip_if_fail = FALSE ) result <- build_outlined_strata_project(outline) #> [2025-02-03 21:45:56.2153] INFO: Backed up /tmp/RtmpKn24Yq/file1e502bbf0ff9/strata/test2/.laminae.toml to /tmp/RtmpKn24Yq/file1e502bbf0ff9/strata/test2/.laminae.bak  dplyr::glimpse(result) #> Rows: 2 #> Columns: 7 #> $ execution_order <int> 1, 2 #> $ stratum_name    <chr> \"test1\", \"test2\" #> $ lamina_name     <chr> \"lamina1\", \"lamina1\" #> $ script_name     <chr> \"my_code\", \"my_code\" #> $ script_path     <fs::path> \"/tmp/RtmpKn24Yq/file1e502bbf0ff9/strata/test1/lamina1‚Ä¶ #> $ skip_if_fail    <lgl> FALSE, FALSE #> $ created         <date> 2025-02-03, 2025-02-03 main(tmp) #> [2025-02-03 21:45:56.3873] INFO: Strata started  #> [2025-02-03 21:45:56.3878] INFO: Stratum: test1 initialized  #> [2025-02-03 21:45:56.3881] INFO: Lamina: lamina1 initialized  #> [2025-02-03 21:45:56.3886] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:56.3893] INFO: Stratum: test1 finished  #> [2025-02-03 21:45:56.3897] INFO: Stratum: test2 initialized  #> [2025-02-03 21:45:56.3901] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:56.3908] INFO: Strata finished - duration: 0.0036 seconds  fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/build_quick_strata_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Quickly build strata project with minimal input and standard names ‚Äî build_quick_strata_project","title":"Quickly build strata project with minimal input and standard names ‚Äî build_quick_strata_project","text":"build_quick_strata_project create project specified number strata - num_strata, specified number laminae num_laminae_per per stratum. strata laminae named stratum_1, stratum_2, etc. s1_lamina_1, s1_lamina_2, etc.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_quick_strata_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quickly build strata project with minimal input and standard names ‚Äî build_quick_strata_project","text":"","code":"build_quick_strata_project(project_path, num_strata = 1, num_laminae_per = 1)"},{"path":"https://asenetcky.github.io/strata/reference/build_quick_strata_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quickly build strata project with minimal input and standard names ‚Äî build_quick_strata_project","text":"project_path path strata project folder. num_strata Number strata create. num_laminae_per Number laminae create per stratum.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_quick_strata_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quickly build strata project with minimal input and standard names ‚Äî build_quick_strata_project","text":"invisible dataframe survey strata project.","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_quick_strata_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quickly build strata project with minimal input and standard names ‚Äî build_quick_strata_project","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) result <- build_quick_strata_project(tmp, 2, 2) dplyr::glimpse(result) #> Rows: 4 #> Columns: 7 #> $ execution_order <int> 1, 2, 3, 4 #> $ stratum_name    <chr> \"stratum_1\", \"stratum_1\", \"stratum_2\", \"stratum_2\" #> $ lamina_name     <chr> \"s1_lamina_1\", \"s1_lamina_2\", \"s2_lamina_1\", \"s2_lamin‚Ä¶ #> $ script_name     <chr> \"my_code\", \"my_code\", \"my_code\", \"my_code\" #> $ script_path     <fs::path> \"/tmp/RtmpKn24Yq/file1e504746b116/strata/stratum_1/s1_‚Ä¶ #> $ skip_if_fail    <lgl> FALSE, FALSE, FALSE, FALSE #> $ created         <date> 2025-02-03, 2025-02-03, 2025-02-03, 2025-02-03 main(tmp) #> [2025-02-03 21:45:56.8149] INFO: Strata started  #> [2025-02-03 21:45:56.8153] INFO: Stratum: stratum_1 initialized  #> [2025-02-03 21:45:56.8157] INFO: Lamina: s1_lamina_1 initialized  #> [2025-02-03 21:45:56.8162] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:56.8169] INFO: Lamina: s1_lamina_1 finished  #> [2025-02-03 21:45:56.8173] INFO: Lamina: s1_lamina_2 initialized  #> [2025-02-03 21:45:56.8176] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:56.8325] INFO: Stratum: stratum_1 finished  #> [2025-02-03 21:45:56.8329] INFO: Stratum: stratum_2 initialized  #> [2025-02-03 21:45:56.8333] INFO: Lamina: s1_lamina_2 finished  #> [2025-02-03 21:45:56.8336] INFO: Lamina: s2_lamina_1 initialized  #> [2025-02-03 21:45:56.8340] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:56.8347] INFO: Lamina: s2_lamina_1 finished  #> [2025-02-03 21:45:56.8350] INFO: Lamina: s2_lamina_2 initialized  #> [2025-02-03 21:45:56.8354] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:56.8360] INFO: Strata finished - duration: 0.0213 seconds  fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/build_stratum.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a stratum to the project space ‚Äî build_stratum","title":"Add a stratum to the project space ‚Äî build_stratum","text":"Add stratum project space","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_stratum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a stratum to the project space ‚Äî build_stratum","text":"","code":"build_stratum(stratum_name, project_path, order = 1)"},{"path":"https://asenetcky.github.io/strata/reference/build_stratum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a stratum to the project space ‚Äî build_stratum","text":"stratum_name Name stratum project_path path strata project folder. order Execution order, default 1","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_stratum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a stratum to the project space ‚Äî build_stratum","text":"invisibly returns fs::path stratum","code":""},{"path":"https://asenetcky.github.io/strata/reference/build_stratum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a stratum to the project space ‚Äî build_stratum","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) result <- build_stratum(\"my_stratum_name\", tmp) result #> /tmp/RtmpKn24Yq/file1e5053f49334/strata/my_stratum_name fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"Users can use edit_toml() edit toml file (opt use text editor) providing dataframe desired contents. function check dataframe validity rewrite toml file using dataframe blueprint.","code":""},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"","code":"edit_toml(original_toml_path, new_toml_dataframe)"},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"original_toml_path Path original toml file. new_toml_dataframe Dataframe new toml file contents following columns: type, name, order, skip_if_fail, created.","code":""},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"invisible original toml file path toml file","code":""},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":"new-toml-dataframe","dir":"Reference","previous_headings":"","what":"new_toml_dataframe","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"edit_toml() check dataframe following columns: type: type toml file, character  either \"strata\" \"laminae\" name: character string name stratum lamina order: numeric order stratum lamina skip_if_fail: (type == laminae) logical indicating lamina skipped fails created: valid date day stratum lamina created Unexpected columns dropped, edit_toml() warn user. missing columns, edit_toml() return error, stop inform user missing. duplicates order strata rewrite order using best guess.","code":""},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":"usage","dir":"Reference","previous_headings":"","what":"usage","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"Users using function likely want combine helpers strata. may looks something like : User runs survey_tomls() find toml files project User runs view_toml() view contents toml file saves object, like original_toml similiar User edits original_toml object liking saves new object, like new_toml. User runs edit_toml() path original toml new_toml objects can use view_toml() confirm changes.","code":""},{"path":"https://asenetcky.github.io/strata/reference/edit_toml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit a toml file by providing a dataframe replacement ‚Äî edit_toml","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) strata::build_quick_strata_project(tmp, 2, 3) original_toml_path <- survey_tomls(tmp)[[1]] original_toml <- view_toml(original_toml_path) original_toml #> # A tibble: 2 √ó 4 #>   type   name      order created    #>   <chr>  <chr>     <int> <date>     #> 1 strata stratum_1     1 2025-02-03 #> 2 strata stratum_2     2 2025-02-03 new_toml <- original_toml |>   dplyr::mutate(     created = as.Date(\"2021-01-01\")   ) new_toml_path <- edit_toml(original_toml_path, new_toml) #> [2025-02-03 21:45:57.3803] INFO: Backed up /tmp/RtmpKn24Yq/file1e5017033464/strata/.strata.toml to /tmp/RtmpKn24Yq/file1e5017033464/strata/.strata.bak  view_toml(new_toml_path) #> # A tibble: 2 √ó 4 #>   type   name      order created    #>   <chr>  <chr>     <int> <date>     #> 1 strata stratum_1     1 2021-01-01 #> 2 strata stratum_2     2 2021-01-01 fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/log_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around log_message for ERROR messages in the log ‚Äî log_error","title":"Wrapper around log_message for ERROR messages in the log ‚Äî log_error","text":"log_error() stop execution script, print message stderr.","code":""},{"path":"https://asenetcky.github.io/strata/reference/log_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around log_message for ERROR messages in the log ‚Äî log_error","text":"","code":"log_error(message)"},{"path":"https://asenetcky.github.io/strata/reference/log_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around log_message for ERROR messages in the log ‚Äî log_error","text":"message string containing message log.","code":""},{"path":"https://asenetcky.github.io/strata/reference/log_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around log_message for ERROR messages in the log ‚Äî log_error","text":"message printed stderr invisible character string copy entire log error message.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/log_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper around log_message for ERROR messages in the log ‚Äî log_error","text":"","code":"log_error(\"This is an error message\") #> [2025-02-03 21:45:57.6683] ERROR: This is an error message"},{"path":"https://asenetcky.github.io/strata/reference/log_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Send a standardized log message to stdout or stderr ‚Äî log_message","title":"Send a standardized log message to stdout or stderr ‚Äî log_message","text":"log_message() stop execution script, regardless level message, whether prints STDOUT STDERR.","code":""},{"path":"https://asenetcky.github.io/strata/reference/log_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send a standardized log message to stdout or stderr ‚Äî log_message","text":"","code":"log_message(message, level = \"INFO\", out_or_err = \"OUT\")"},{"path":"https://asenetcky.github.io/strata/reference/log_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send a standardized log message to stdout or stderr ‚Äî log_message","text":"message string containing message log. level level message (e.g. INFO, WARNING, ERROR), defaults \"INFO\" accept string. out_or_err Send log output stdout stderr, choices \"\" \"ERR\" defaults \"\".","code":""},{"path":"https://asenetcky.github.io/strata/reference/log_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send a standardized log message to stdout or stderr ‚Äî log_message","text":"message printed stdout stderr invisible character string copy entire log message.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/log_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send a standardized log message to stdout or stderr ‚Äî log_message","text":"","code":"log_message(\"This is an info message\", \"INFO\", \"OUT\") #> [2025-02-03 21:45:57.7879] INFO: This is an info message  log_message(\"This is an error message\", \"ERROR\", \"ERR\") #> [2025-02-03 21:45:57.7888] ERROR: This is an error message log_message(\"This is a warning message\", \"WARNING\", \"OUT\") #> [2025-02-03 21:45:57.7898] WARNING: This is a warning message"},{"path":"https://asenetcky.github.io/strata/reference/log_total_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Print time difference in a standard message for logging purposes ‚Äî log_total_time","title":"Print time difference in a standard message for logging purposes ‚Äî log_total_time","text":"Print time difference standard message logging purposes","code":""},{"path":"https://asenetcky.github.io/strata/reference/log_total_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print time difference in a standard message for logging purposes ‚Äî log_total_time","text":"","code":"log_total_time(begin, end)"},{"path":"https://asenetcky.github.io/strata/reference/log_total_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print time difference in a standard message for logging purposes ‚Äî log_total_time","text":"begin data-time object, signifying beginning process end data-time object, signifying end process","code":""},{"path":"https://asenetcky.github.io/strata/reference/log_total_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print time difference in a standard message for logging purposes ‚Äî log_total_time","text":"numeric value time difference seconds","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/log_total_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print time difference in a standard message for logging purposes ‚Äî log_total_time","text":"","code":"begin <- Sys.time() # do something end <- Sys.time() + 999 log_total_time(begin, end) #> [1] 999.0005"},{"path":"https://asenetcky.github.io/strata/reference/main.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute entire strata project ‚Äî main","title":"Execute entire strata project ‚Äî main","text":"main() read .toml files inside project_path begin sourcing strata laminae order specified user, without logging messages. strata project created main.R added project root. script houses main(), file entry point project target automation. However, main() can called anywhere, users can opt use main.R .","code":""},{"path":"https://asenetcky.github.io/strata/reference/main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute entire strata project ‚Äî main","text":"","code":"main(project_path, silent = FALSE)"},{"path":"https://asenetcky.github.io/strata/reference/main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute entire strata project ‚Äî main","text":"project_path path strata project folder. silent Suppress log messages? FALSE (default), log messages printed console. TRUE, log messages suppressed.","code":""},{"path":"https://asenetcky.github.io/strata/reference/main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute entire strata project ‚Äî main","text":"invisible execution plan.","code":""},{"path":"https://asenetcky.github.io/strata/reference/main.html","id":"-toml-files","dir":"Reference","previous_headings":"","what":".toml files","title":"Execute entire strata project ‚Äî main","text":"two types .toml files main() read: .strata.toml - singular file inside <project_path>/strata folder .laminae.toml - file inside <project_path>/strata/<stratum_name> folder files created strata functions used determine primarily order execution strata laminae.  Anything referenced .toml ignored main() functions survey_strata(), adhoc_stratum(), adhoc_lamina(). Users can safely add folders files project root, even within subfolders ignored, unless users code known .toml references . Users can use functions survey_tomls() [view_toml())] find view .toml files project. [view_toml())]: R:view_toml())","code":""},{"path":"https://asenetcky.github.io/strata/reference/main.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute entire strata project ‚Äî main","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) result <- strata::build_quick_strata_project(tmp, 1, 1) main(tmp) #> [2025-02-03 21:45:58.1964] INFO: Strata started  #> [2025-02-03 21:45:58.1969] INFO: Stratum: stratum_1 initialized  #> [2025-02-03 21:45:58.1972] INFO: Lamina: s1_lamina_1 initialized  #> [2025-02-03 21:45:58.1977] INFO: Executing: my_code  #> [1] \"I am a placeholder, do not forget to replace me!\" #> [2025-02-03 21:45:58.1984] INFO: Strata finished - duration: 0.0021 seconds  fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/strata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"strata: Simple Framework for Simple Automation ‚Äî strata-package","title":"strata: Simple Framework for Simple Automation ‚Äî strata-package","text":"Build project framework users access basic automation tools.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/strata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"strata: Simple Framework for Simple Automation ‚Äî strata-package","text":"Maintainer: Alexander Senetcky asenetcky@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the log contents of a strata log file as a tibble ‚Äî survey_log","title":"Return the log contents of a strata log file as a tibble ‚Äî survey_log","text":"users decide pipe results main() logging-related functions log file, contents log file can parsed stored tibble using survey_log().  messages log_*() functions parsed, output code ignored.","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the log contents of a strata log file as a tibble ‚Äî survey_log","text":"","code":"survey_log(log_path)"},{"path":"https://asenetcky.github.io/strata/reference/survey_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the log contents of a strata log file as a tibble ‚Äî survey_log","text":"log_path Path log file","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the log contents of a strata log file as a tibble ‚Äî survey_log","text":"tibble contents log file","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/survey_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the log contents of a strata log file as a tibble ‚Äî survey_log","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) log <- fs::file_create(fs::path(tmp, \"main.log\")) fake_log_message <- log_message(\"example message\") #> [2025-02-03 21:45:58.4359] INFO: example message  cat(fake_log_message, file = log) survey_log(log) #> Warning: incomplete final line found on '/tmp/RtmpKn24Yq/file1e509b0d325/main.log' #> # A tibble: 1 √ó 4 #>   line_number timestamp           level message         #>         <int> <dttm>              <chr> <chr>           #> 1           1 2025-02-03 21:45:58 INFO  example message fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/survey_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Survey the layout and execution order of a strata project ‚Äî survey_strata","title":"Survey the layout and execution order of a strata project ‚Äî survey_strata","text":"survey_strata() examine .tomls project_path provided return dataframe following information project: stratum_name: name stratum lamina_name: name lamina execution_order: order stratum-lamina-code combination executed script_name: name script executed script_path: path script based contents .toml files, everything else \"invisible\" inside strata project.","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Survey the layout and execution order of a strata project ‚Äî survey_strata","text":"","code":"survey_strata(project_path)"},{"path":"https://asenetcky.github.io/strata/reference/survey_strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Survey the layout and execution order of a strata project ‚Äî survey_strata","text":"project_path path strata project folder.","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Survey the layout and execution order of a strata project ‚Äî survey_strata","text":"dataframe housing layout project based .tomls.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/survey_strata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Survey the layout and execution order of a strata project ‚Äî survey_strata","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) build_quick_strata_project(tmp, 2, 2) survey_strata(tmp) #> # A tibble: 4 √ó 7 #>   execution_order stratum_name lamina_name script_name script_path  skip_if_fail #>             <int> <chr>        <chr>       <chr>       <fs::path>   <lgl>        #> 1               1 stratum_1    s1_lamina_1 my_code     ‚Ä¶1/my_code.R FALSE        #> 2               2 stratum_1    s1_lamina_2 my_code     ‚Ä¶2/my_code.R FALSE        #> 3               3 stratum_2    s2_lamina_1 my_code     ‚Ä¶1/my_code.R FALSE        #> 4               4 stratum_2    s2_lamina_2 my_code     ‚Ä¶2/my_code.R FALSE        #> # ‚Ñπ 1 more variable: created <date> fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/survey_tomls.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all the strata-based toml files in a strata project ‚Äî survey_tomls","title":"Find all the strata-based toml files in a strata project ‚Äî survey_tomls","text":"Find strata-based toml files strata project","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_tomls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all the strata-based toml files in a strata project ‚Äî survey_tomls","text":"","code":"survey_tomls(project_path)"},{"path":"https://asenetcky.github.io/strata/reference/survey_tomls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all the strata-based toml files in a strata project ‚Äî survey_tomls","text":"project_path path strata project folder.","code":""},{"path":"https://asenetcky.github.io/strata/reference/survey_tomls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all the strata-based toml files in a strata project ‚Äî survey_tomls","text":"fs_path object toml files.","code":""},{"path":[]},{"path":"https://asenetcky.github.io/strata/reference/survey_tomls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all the strata-based toml files in a strata project ‚Äî survey_tomls","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) strata::build_quick_strata_project(tmp, 2, 3) survey_tomls(tmp) #> /tmp/RtmpKn24Yq/file1e505323f6c4/strata/.strata.toml #> /tmp/RtmpKn24Yq/file1e505323f6c4/strata/stratum_1/.laminae.toml #> /tmp/RtmpKn24Yq/file1e505323f6c4/strata/stratum_2/.laminae.toml fs::dir_delete(tmp)"},{"path":"https://asenetcky.github.io/strata/reference/view_toml.html","id":null,"dir":"Reference","previous_headings":"","what":"View the contents of a toml file as a dataframe ‚Äî view_toml","title":"View the contents of a toml file as a dataframe ‚Äî view_toml","text":"View contents toml file dataframe","code":""},{"path":"https://asenetcky.github.io/strata/reference/view_toml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View the contents of a toml file as a dataframe ‚Äî view_toml","text":"","code":"view_toml(toml_path)"},{"path":"https://asenetcky.github.io/strata/reference/view_toml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View the contents of a toml file as a dataframe ‚Äî view_toml","text":"toml_path Path toml file","code":""},{"path":"https://asenetcky.github.io/strata/reference/view_toml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View the contents of a toml file as a dataframe ‚Äî view_toml","text":"dataframe toml file contents.","code":""},{"path":"https://asenetcky.github.io/strata/reference/view_toml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View the contents of a toml file as a dataframe ‚Äî view_toml","text":"","code":"tmp <- fs::dir_create(fs::file_temp()) strata::build_quick_strata_project(tmp, 2, 3) proj_tomls <- survey_tomls(tmp) purrr::map(proj_tomls, view_toml) #> $`/tmp/RtmpKn24Yq/file1e5027b53879/strata/.strata.toml` #> # A tibble: 2 √ó 4 #>   type   name      order created    #>   <chr>  <chr>     <int> <date>     #> 1 strata stratum_1     1 2025-02-03 #> 2 strata stratum_2     2 2025-02-03 #>  #> $`/tmp/RtmpKn24Yq/file1e5027b53879/strata/stratum_1/.laminae.toml` #> # A tibble: 3 √ó 5 #>   type    name        order skip_if_fail created    #>   <chr>   <chr>       <int> <lgl>        <date>     #> 1 laminae s1_lamina_1     1 FALSE        2025-02-03 #> 2 laminae s1_lamina_2     2 FALSE        2025-02-03 #> 3 laminae s1_lamina_3     3 FALSE        2025-02-03 #>  #> $`/tmp/RtmpKn24Yq/file1e5027b53879/strata/stratum_2/.laminae.toml` #> # A tibble: 3 √ó 5 #>   type    name        order skip_if_fail created    #>   <chr>   <chr>       <int> <lgl>        <date>     #> 1 laminae s2_lamina_1     1 FALSE        2025-02-03 #> 2 laminae s2_lamina_2     2 FALSE        2025-02-03 #> 3 laminae s2_lamina_3     3 FALSE        2025-02-03 #>  fs::dir_delete(tmp)"},{"path":[]},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"strata-140","dir":"Changelog","previous_headings":"","what":"strata 1.4.0","title":"strata 1.4.0","text":"release bug fixes improvements user experience.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"breaking-changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"strata 1.4.0","text":"Added dependency R >= 4.1.0 due use base R pipe |>.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"new-features-1-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"strata 1.4.0","text":"adhoc() added allow users ad hoc portion strata project name (instead remember different file paths) (#46). survey_log() added allow users survey logs strata project dataframe (#41, #43). Added stricter strata project checking (#48). added stricter path checking functions require paths existing files folders. added helpful error messages users regarding paths, Functions now check folder strata project provide helpful error messages strata projects.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"fixes-1-4-0","dir":"Changelog","previous_headings":"","what":"Fixes","title":"strata 1.4.0","text":"File name/path cleaning performed strata ensure valid path names now stop blocking certain path/name manipulations. adhoc_stratum() now properly handle existing file paths avoid errors stating otherwise (#44). build_execution_plan() now properly handles case laminae different strata name (#52). timestamp log_*() family functions now always 24 characters long (#40). build_outlined_strata_project() now allow multiple laminae per stratum (#36).","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"minor-improvements-1-4-0","dir":"Changelog","previous_headings":"","what":"Minor Improvements","title":"strata 1.4.0","text":"File name/path cleaning performed strata ensure valid path names now ignore dashes ‚Äú-‚Äù file names. adhoc_*() functions now ‚Äúfail fast‚Äù, stop execution alert users problems (#45).","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"strata-101","dir":"Changelog","previous_headings":"","what":"strata 1.0.1","title":"strata 1.0.1","text":"CRAN release: 2024-11-27 Initial CRAN Release.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"breaking-changes-1-0-1","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"strata 1.0.1","text":"Removed lubridate dependency due license mismatch. Renamed path argument project_path build_stratum().","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"new-features-1-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"strata 1.0.1","text":"strata shipped following features initial release.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"project-execution-1-0-1","dir":"Changelog","previous_headings":"New Features","what":"Project Execution","title":"strata 1.0.1","text":"main() - Execute strata project. survey_strata() - Survey strata, laminae, scripts strata project return execution order user.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"building-a-strata-project-1-0-1","dir":"Changelog","previous_headings":"New Features","what":"Building a strata project","title":"strata 1.0.1","text":"build_stratum() - Build new stratum strata project. build_lamina() - Build new lamina inside stratum strata project. build_outlined_strata_project() - Build new strata project user-specified outline. build_quick_strata_project() - quickly b uild new strata project standard names structure.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"adhoc-1-0-1","dir":"Changelog","previous_headings":"New Features","what":"Adhoc","title":"strata 1.0.1","text":"adhoc_stratum() - Execute single stratum ad hoc strata project, ignoring strata. adhoc_lamina() - Execute single lamina ad hoc strata project, ignoring laminae stratum, strata.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"logging-1-0-1","dir":"Changelog","previous_headings":"New Features","what":"Logging","title":"strata 1.0.1","text":"log_message() - Log message stdout stderr. log_error() - Log error message stderr. log_total_time() - log helper function print time difference standard message logging.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"config-management-1-0-1","dir":"Changelog","previous_headings":"New Features","what":"Config management","title":"strata 1.0.1","text":"survey_tomls() - List .toml files project. view_toml() - Return dataframe contents toml file. edit_toml() - Replace toml user-provided path contents dataframe.","code":""},{"path":"https://asenetcky.github.io/strata/news/index.html","id":"minor-improvements-and-fixes-1-0-1","dir":"Changelog","previous_headings":"","what":"Minor improvements and fixes","title":"strata 1.0.1","text":"Trimmed description per CRAN‚Äôs request Added pkgdown website","code":""}]
